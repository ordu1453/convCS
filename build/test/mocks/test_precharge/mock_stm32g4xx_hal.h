/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_STM32G4XX_HAL_H
#define _MOCK_STM32G4XX_HAL_H

#include "unity.h"
#include "stm32g4xx_hal.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

#ifdef __cplusplus
extern "C" {
#endif

void mock_stm32g4xx_hal_Init(void);
void mock_stm32g4xx_hal_Destroy(void);
void mock_stm32g4xx_hal_Verify(void);




#define HAL_Init_Ignore() TEST_FAIL_MESSAGE("HAL_Init requires _IgnoreAndReturn");
#define HAL_Init_IgnoreAndReturn(cmock_retval) HAL_Init_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void HAL_Init_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, HAL_StatusTypeDef cmock_to_return);
#define HAL_Init_StopIgnore() HAL_Init_CMockStopIgnore()
void HAL_Init_CMockStopIgnore(void);
#define HAL_Init_Expect() TEST_FAIL_MESSAGE("HAL_Init requires _ExpectAndReturn");
#define HAL_Init_ExpectAndReturn(cmock_retval) HAL_Init_CMockExpectAndReturn(__LINE__, cmock_retval)
void HAL_Init_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, HAL_StatusTypeDef cmock_to_return);
typedef HAL_StatusTypeDef (* CMOCK_HAL_Init_CALLBACK)(int cmock_num_calls);
void HAL_Init_AddCallback(CMOCK_HAL_Init_CALLBACK Callback);
void HAL_Init_Stub(CMOCK_HAL_Init_CALLBACK Callback);
#define HAL_Init_StubWithCallback HAL_Init_Stub
#define HAL_DeInit_Ignore() TEST_FAIL_MESSAGE("HAL_DeInit requires _IgnoreAndReturn");
#define HAL_DeInit_IgnoreAndReturn(cmock_retval) HAL_DeInit_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void HAL_DeInit_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, HAL_StatusTypeDef cmock_to_return);
#define HAL_DeInit_StopIgnore() HAL_DeInit_CMockStopIgnore()
void HAL_DeInit_CMockStopIgnore(void);
#define HAL_DeInit_Expect() TEST_FAIL_MESSAGE("HAL_DeInit requires _ExpectAndReturn");
#define HAL_DeInit_ExpectAndReturn(cmock_retval) HAL_DeInit_CMockExpectAndReturn(__LINE__, cmock_retval)
void HAL_DeInit_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, HAL_StatusTypeDef cmock_to_return);
typedef HAL_StatusTypeDef (* CMOCK_HAL_DeInit_CALLBACK)(int cmock_num_calls);
void HAL_DeInit_AddCallback(CMOCK_HAL_DeInit_CALLBACK Callback);
void HAL_DeInit_Stub(CMOCK_HAL_DeInit_CALLBACK Callback);
#define HAL_DeInit_StubWithCallback HAL_DeInit_Stub
#define HAL_MspInit_IgnoreAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_MspInit requires _Ignore (not AndReturn)");
#define HAL_MspInit_Ignore() HAL_MspInit_CMockIgnore()
void HAL_MspInit_CMockIgnore(void);
#define HAL_MspInit_StopIgnore() HAL_MspInit_CMockStopIgnore()
void HAL_MspInit_CMockStopIgnore(void);
#define HAL_MspInit_ExpectAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_MspInit requires _Expect (not AndReturn)");
#define HAL_MspInit_Expect() HAL_MspInit_CMockExpect(__LINE__)
void HAL_MspInit_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_HAL_MspInit_CALLBACK)(int cmock_num_calls);
void HAL_MspInit_AddCallback(CMOCK_HAL_MspInit_CALLBACK Callback);
void HAL_MspInit_Stub(CMOCK_HAL_MspInit_CALLBACK Callback);
#define HAL_MspInit_StubWithCallback HAL_MspInit_Stub
#define HAL_MspDeInit_IgnoreAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_MspDeInit requires _Ignore (not AndReturn)");
#define HAL_MspDeInit_Ignore() HAL_MspDeInit_CMockIgnore()
void HAL_MspDeInit_CMockIgnore(void);
#define HAL_MspDeInit_StopIgnore() HAL_MspDeInit_CMockStopIgnore()
void HAL_MspDeInit_CMockStopIgnore(void);
#define HAL_MspDeInit_ExpectAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_MspDeInit requires _Expect (not AndReturn)");
#define HAL_MspDeInit_Expect() HAL_MspDeInit_CMockExpect(__LINE__)
void HAL_MspDeInit_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_HAL_MspDeInit_CALLBACK)(int cmock_num_calls);
void HAL_MspDeInit_AddCallback(CMOCK_HAL_MspDeInit_CALLBACK Callback);
void HAL_MspDeInit_Stub(CMOCK_HAL_MspDeInit_CALLBACK Callback);
#define HAL_MspDeInit_StubWithCallback HAL_MspDeInit_Stub
#define HAL_InitTick_Ignore() TEST_FAIL_MESSAGE("HAL_InitTick requires _IgnoreAndReturn");
#define HAL_InitTick_IgnoreAndReturn(cmock_retval) HAL_InitTick_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void HAL_InitTick_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, HAL_StatusTypeDef cmock_to_return);
#define HAL_InitTick_StopIgnore() HAL_InitTick_CMockStopIgnore()
void HAL_InitTick_CMockStopIgnore(void);
#define HAL_InitTick_Expect(TickPriority) TEST_FAIL_MESSAGE("HAL_InitTick requires _ExpectAndReturn");
#define HAL_InitTick_ExpectAndReturn(TickPriority, cmock_retval) HAL_InitTick_CMockExpectAndReturn(__LINE__, TickPriority, cmock_retval)
void HAL_InitTick_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t TickPriority, HAL_StatusTypeDef cmock_to_return);
typedef HAL_StatusTypeDef (* CMOCK_HAL_InitTick_CALLBACK)(uint32_t TickPriority, int cmock_num_calls);
void HAL_InitTick_AddCallback(CMOCK_HAL_InitTick_CALLBACK Callback);
void HAL_InitTick_Stub(CMOCK_HAL_InitTick_CALLBACK Callback);
#define HAL_InitTick_StubWithCallback HAL_InitTick_Stub
#define HAL_IncTick_IgnoreAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_IncTick requires _Ignore (not AndReturn)");
#define HAL_IncTick_Ignore() HAL_IncTick_CMockIgnore()
void HAL_IncTick_CMockIgnore(void);
#define HAL_IncTick_StopIgnore() HAL_IncTick_CMockStopIgnore()
void HAL_IncTick_CMockStopIgnore(void);
#define HAL_IncTick_ExpectAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_IncTick requires _Expect (not AndReturn)");
#define HAL_IncTick_Expect() HAL_IncTick_CMockExpect(__LINE__)
void HAL_IncTick_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_HAL_IncTick_CALLBACK)(int cmock_num_calls);
void HAL_IncTick_AddCallback(CMOCK_HAL_IncTick_CALLBACK Callback);
void HAL_IncTick_Stub(CMOCK_HAL_IncTick_CALLBACK Callback);
#define HAL_IncTick_StubWithCallback HAL_IncTick_Stub
#define HAL_Delay_IgnoreAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_Delay requires _Ignore (not AndReturn)");
#define HAL_Delay_Ignore() HAL_Delay_CMockIgnore()
void HAL_Delay_CMockIgnore(void);
#define HAL_Delay_StopIgnore() HAL_Delay_CMockStopIgnore()
void HAL_Delay_CMockStopIgnore(void);
#define HAL_Delay_ExpectAndReturn(Delay, cmock_retval) TEST_FAIL_MESSAGE("HAL_Delay requires _Expect (not AndReturn)");
#define HAL_Delay_Expect(Delay) HAL_Delay_CMockExpect(__LINE__, Delay)
void HAL_Delay_CMockExpect(UNITY_LINE_TYPE cmock_line, uint32_t Delay);
typedef void (* CMOCK_HAL_Delay_CALLBACK)(uint32_t Delay, int cmock_num_calls);
void HAL_Delay_AddCallback(CMOCK_HAL_Delay_CALLBACK Callback);
void HAL_Delay_Stub(CMOCK_HAL_Delay_CALLBACK Callback);
#define HAL_Delay_StubWithCallback HAL_Delay_Stub
#define HAL_GetTick_Ignore() TEST_FAIL_MESSAGE("HAL_GetTick requires _IgnoreAndReturn");
#define HAL_GetTick_IgnoreAndReturn(cmock_retval) HAL_GetTick_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void HAL_GetTick_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define HAL_GetTick_StopIgnore() HAL_GetTick_CMockStopIgnore()
void HAL_GetTick_CMockStopIgnore(void);
#define HAL_GetTick_Expect() TEST_FAIL_MESSAGE("HAL_GetTick requires _ExpectAndReturn");
#define HAL_GetTick_ExpectAndReturn(cmock_retval) HAL_GetTick_CMockExpectAndReturn(__LINE__, cmock_retval)
void HAL_GetTick_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
typedef uint32_t (* CMOCK_HAL_GetTick_CALLBACK)(int cmock_num_calls);
void HAL_GetTick_AddCallback(CMOCK_HAL_GetTick_CALLBACK Callback);
void HAL_GetTick_Stub(CMOCK_HAL_GetTick_CALLBACK Callback);
#define HAL_GetTick_StubWithCallback HAL_GetTick_Stub
#define HAL_GetTickPrio_Ignore() TEST_FAIL_MESSAGE("HAL_GetTickPrio requires _IgnoreAndReturn");
#define HAL_GetTickPrio_IgnoreAndReturn(cmock_retval) HAL_GetTickPrio_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void HAL_GetTickPrio_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define HAL_GetTickPrio_StopIgnore() HAL_GetTickPrio_CMockStopIgnore()
void HAL_GetTickPrio_CMockStopIgnore(void);
#define HAL_GetTickPrio_Expect() TEST_FAIL_MESSAGE("HAL_GetTickPrio requires _ExpectAndReturn");
#define HAL_GetTickPrio_ExpectAndReturn(cmock_retval) HAL_GetTickPrio_CMockExpectAndReturn(__LINE__, cmock_retval)
void HAL_GetTickPrio_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
typedef uint32_t (* CMOCK_HAL_GetTickPrio_CALLBACK)(int cmock_num_calls);
void HAL_GetTickPrio_AddCallback(CMOCK_HAL_GetTickPrio_CALLBACK Callback);
void HAL_GetTickPrio_Stub(CMOCK_HAL_GetTickPrio_CALLBACK Callback);
#define HAL_GetTickPrio_StubWithCallback HAL_GetTickPrio_Stub
#define HAL_SetTickFreq_Ignore() TEST_FAIL_MESSAGE("HAL_SetTickFreq requires _IgnoreAndReturn");
#define HAL_SetTickFreq_IgnoreAndReturn(cmock_retval) HAL_SetTickFreq_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void HAL_SetTickFreq_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, HAL_StatusTypeDef cmock_to_return);
#define HAL_SetTickFreq_StopIgnore() HAL_SetTickFreq_CMockStopIgnore()
void HAL_SetTickFreq_CMockStopIgnore(void);
#define HAL_SetTickFreq_Expect(Freq) TEST_FAIL_MESSAGE("HAL_SetTickFreq requires _ExpectAndReturn");
#define HAL_SetTickFreq_ExpectAndReturn(Freq, cmock_retval) HAL_SetTickFreq_CMockExpectAndReturn(__LINE__, Freq, cmock_retval)
void HAL_SetTickFreq_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t Freq, HAL_StatusTypeDef cmock_to_return);
typedef HAL_StatusTypeDef (* CMOCK_HAL_SetTickFreq_CALLBACK)(uint32_t Freq, int cmock_num_calls);
void HAL_SetTickFreq_AddCallback(CMOCK_HAL_SetTickFreq_CALLBACK Callback);
void HAL_SetTickFreq_Stub(CMOCK_HAL_SetTickFreq_CALLBACK Callback);
#define HAL_SetTickFreq_StubWithCallback HAL_SetTickFreq_Stub
#define HAL_GetTickFreq_Ignore() TEST_FAIL_MESSAGE("HAL_GetTickFreq requires _IgnoreAndReturn");
#define HAL_GetTickFreq_IgnoreAndReturn(cmock_retval) HAL_GetTickFreq_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void HAL_GetTickFreq_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define HAL_GetTickFreq_StopIgnore() HAL_GetTickFreq_CMockStopIgnore()
void HAL_GetTickFreq_CMockStopIgnore(void);
#define HAL_GetTickFreq_Expect() TEST_FAIL_MESSAGE("HAL_GetTickFreq requires _ExpectAndReturn");
#define HAL_GetTickFreq_ExpectAndReturn(cmock_retval) HAL_GetTickFreq_CMockExpectAndReturn(__LINE__, cmock_retval)
void HAL_GetTickFreq_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
typedef uint32_t (* CMOCK_HAL_GetTickFreq_CALLBACK)(int cmock_num_calls);
void HAL_GetTickFreq_AddCallback(CMOCK_HAL_GetTickFreq_CALLBACK Callback);
void HAL_GetTickFreq_Stub(CMOCK_HAL_GetTickFreq_CALLBACK Callback);
#define HAL_GetTickFreq_StubWithCallback HAL_GetTickFreq_Stub
#define HAL_SuspendTick_IgnoreAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_SuspendTick requires _Ignore (not AndReturn)");
#define HAL_SuspendTick_Ignore() HAL_SuspendTick_CMockIgnore()
void HAL_SuspendTick_CMockIgnore(void);
#define HAL_SuspendTick_StopIgnore() HAL_SuspendTick_CMockStopIgnore()
void HAL_SuspendTick_CMockStopIgnore(void);
#define HAL_SuspendTick_ExpectAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_SuspendTick requires _Expect (not AndReturn)");
#define HAL_SuspendTick_Expect() HAL_SuspendTick_CMockExpect(__LINE__)
void HAL_SuspendTick_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_HAL_SuspendTick_CALLBACK)(int cmock_num_calls);
void HAL_SuspendTick_AddCallback(CMOCK_HAL_SuspendTick_CALLBACK Callback);
void HAL_SuspendTick_Stub(CMOCK_HAL_SuspendTick_CALLBACK Callback);
#define HAL_SuspendTick_StubWithCallback HAL_SuspendTick_Stub
#define HAL_ResumeTick_IgnoreAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_ResumeTick requires _Ignore (not AndReturn)");
#define HAL_ResumeTick_Ignore() HAL_ResumeTick_CMockIgnore()
void HAL_ResumeTick_CMockIgnore(void);
#define HAL_ResumeTick_StopIgnore() HAL_ResumeTick_CMockStopIgnore()
void HAL_ResumeTick_CMockStopIgnore(void);
#define HAL_ResumeTick_ExpectAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_ResumeTick requires _Expect (not AndReturn)");
#define HAL_ResumeTick_Expect() HAL_ResumeTick_CMockExpect(__LINE__)
void HAL_ResumeTick_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_HAL_ResumeTick_CALLBACK)(int cmock_num_calls);
void HAL_ResumeTick_AddCallback(CMOCK_HAL_ResumeTick_CALLBACK Callback);
void HAL_ResumeTick_Stub(CMOCK_HAL_ResumeTick_CALLBACK Callback);
#define HAL_ResumeTick_StubWithCallback HAL_ResumeTick_Stub
#define HAL_GetHalVersion_Ignore() TEST_FAIL_MESSAGE("HAL_GetHalVersion requires _IgnoreAndReturn");
#define HAL_GetHalVersion_IgnoreAndReturn(cmock_retval) HAL_GetHalVersion_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void HAL_GetHalVersion_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define HAL_GetHalVersion_StopIgnore() HAL_GetHalVersion_CMockStopIgnore()
void HAL_GetHalVersion_CMockStopIgnore(void);
#define HAL_GetHalVersion_Expect() TEST_FAIL_MESSAGE("HAL_GetHalVersion requires _ExpectAndReturn");
#define HAL_GetHalVersion_ExpectAndReturn(cmock_retval) HAL_GetHalVersion_CMockExpectAndReturn(__LINE__, cmock_retval)
void HAL_GetHalVersion_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
typedef uint32_t (* CMOCK_HAL_GetHalVersion_CALLBACK)(int cmock_num_calls);
void HAL_GetHalVersion_AddCallback(CMOCK_HAL_GetHalVersion_CALLBACK Callback);
void HAL_GetHalVersion_Stub(CMOCK_HAL_GetHalVersion_CALLBACK Callback);
#define HAL_GetHalVersion_StubWithCallback HAL_GetHalVersion_Stub
#define HAL_GetREVID_Ignore() TEST_FAIL_MESSAGE("HAL_GetREVID requires _IgnoreAndReturn");
#define HAL_GetREVID_IgnoreAndReturn(cmock_retval) HAL_GetREVID_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void HAL_GetREVID_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define HAL_GetREVID_StopIgnore() HAL_GetREVID_CMockStopIgnore()
void HAL_GetREVID_CMockStopIgnore(void);
#define HAL_GetREVID_Expect() TEST_FAIL_MESSAGE("HAL_GetREVID requires _ExpectAndReturn");
#define HAL_GetREVID_ExpectAndReturn(cmock_retval) HAL_GetREVID_CMockExpectAndReturn(__LINE__, cmock_retval)
void HAL_GetREVID_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
typedef uint32_t (* CMOCK_HAL_GetREVID_CALLBACK)(int cmock_num_calls);
void HAL_GetREVID_AddCallback(CMOCK_HAL_GetREVID_CALLBACK Callback);
void HAL_GetREVID_Stub(CMOCK_HAL_GetREVID_CALLBACK Callback);
#define HAL_GetREVID_StubWithCallback HAL_GetREVID_Stub
#define HAL_GetDEVID_Ignore() TEST_FAIL_MESSAGE("HAL_GetDEVID requires _IgnoreAndReturn");
#define HAL_GetDEVID_IgnoreAndReturn(cmock_retval) HAL_GetDEVID_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void HAL_GetDEVID_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define HAL_GetDEVID_StopIgnore() HAL_GetDEVID_CMockStopIgnore()
void HAL_GetDEVID_CMockStopIgnore(void);
#define HAL_GetDEVID_Expect() TEST_FAIL_MESSAGE("HAL_GetDEVID requires _ExpectAndReturn");
#define HAL_GetDEVID_ExpectAndReturn(cmock_retval) HAL_GetDEVID_CMockExpectAndReturn(__LINE__, cmock_retval)
void HAL_GetDEVID_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
typedef uint32_t (* CMOCK_HAL_GetDEVID_CALLBACK)(int cmock_num_calls);
void HAL_GetDEVID_AddCallback(CMOCK_HAL_GetDEVID_CALLBACK Callback);
void HAL_GetDEVID_Stub(CMOCK_HAL_GetDEVID_CALLBACK Callback);
#define HAL_GetDEVID_StubWithCallback HAL_GetDEVID_Stub
#define HAL_GetUIDw0_Ignore() TEST_FAIL_MESSAGE("HAL_GetUIDw0 requires _IgnoreAndReturn");
#define HAL_GetUIDw0_IgnoreAndReturn(cmock_retval) HAL_GetUIDw0_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void HAL_GetUIDw0_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define HAL_GetUIDw0_StopIgnore() HAL_GetUIDw0_CMockStopIgnore()
void HAL_GetUIDw0_CMockStopIgnore(void);
#define HAL_GetUIDw0_Expect() TEST_FAIL_MESSAGE("HAL_GetUIDw0 requires _ExpectAndReturn");
#define HAL_GetUIDw0_ExpectAndReturn(cmock_retval) HAL_GetUIDw0_CMockExpectAndReturn(__LINE__, cmock_retval)
void HAL_GetUIDw0_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
typedef uint32_t (* CMOCK_HAL_GetUIDw0_CALLBACK)(int cmock_num_calls);
void HAL_GetUIDw0_AddCallback(CMOCK_HAL_GetUIDw0_CALLBACK Callback);
void HAL_GetUIDw0_Stub(CMOCK_HAL_GetUIDw0_CALLBACK Callback);
#define HAL_GetUIDw0_StubWithCallback HAL_GetUIDw0_Stub
#define HAL_GetUIDw1_Ignore() TEST_FAIL_MESSAGE("HAL_GetUIDw1 requires _IgnoreAndReturn");
#define HAL_GetUIDw1_IgnoreAndReturn(cmock_retval) HAL_GetUIDw1_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void HAL_GetUIDw1_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define HAL_GetUIDw1_StopIgnore() HAL_GetUIDw1_CMockStopIgnore()
void HAL_GetUIDw1_CMockStopIgnore(void);
#define HAL_GetUIDw1_Expect() TEST_FAIL_MESSAGE("HAL_GetUIDw1 requires _ExpectAndReturn");
#define HAL_GetUIDw1_ExpectAndReturn(cmock_retval) HAL_GetUIDw1_CMockExpectAndReturn(__LINE__, cmock_retval)
void HAL_GetUIDw1_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
typedef uint32_t (* CMOCK_HAL_GetUIDw1_CALLBACK)(int cmock_num_calls);
void HAL_GetUIDw1_AddCallback(CMOCK_HAL_GetUIDw1_CALLBACK Callback);
void HAL_GetUIDw1_Stub(CMOCK_HAL_GetUIDw1_CALLBACK Callback);
#define HAL_GetUIDw1_StubWithCallback HAL_GetUIDw1_Stub
#define HAL_GetUIDw2_Ignore() TEST_FAIL_MESSAGE("HAL_GetUIDw2 requires _IgnoreAndReturn");
#define HAL_GetUIDw2_IgnoreAndReturn(cmock_retval) HAL_GetUIDw2_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void HAL_GetUIDw2_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define HAL_GetUIDw2_StopIgnore() HAL_GetUIDw2_CMockStopIgnore()
void HAL_GetUIDw2_CMockStopIgnore(void);
#define HAL_GetUIDw2_Expect() TEST_FAIL_MESSAGE("HAL_GetUIDw2 requires _ExpectAndReturn");
#define HAL_GetUIDw2_ExpectAndReturn(cmock_retval) HAL_GetUIDw2_CMockExpectAndReturn(__LINE__, cmock_retval)
void HAL_GetUIDw2_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
typedef uint32_t (* CMOCK_HAL_GetUIDw2_CALLBACK)(int cmock_num_calls);
void HAL_GetUIDw2_AddCallback(CMOCK_HAL_GetUIDw2_CALLBACK Callback);
void HAL_GetUIDw2_Stub(CMOCK_HAL_GetUIDw2_CALLBACK Callback);
#define HAL_GetUIDw2_StubWithCallback HAL_GetUIDw2_Stub
#define HAL_DBGMCU_EnableDBGSleepMode_IgnoreAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_DBGMCU_EnableDBGSleepMode requires _Ignore (not AndReturn)");
#define HAL_DBGMCU_EnableDBGSleepMode_Ignore() HAL_DBGMCU_EnableDBGSleepMode_CMockIgnore()
void HAL_DBGMCU_EnableDBGSleepMode_CMockIgnore(void);
#define HAL_DBGMCU_EnableDBGSleepMode_StopIgnore() HAL_DBGMCU_EnableDBGSleepMode_CMockStopIgnore()
void HAL_DBGMCU_EnableDBGSleepMode_CMockStopIgnore(void);
#define HAL_DBGMCU_EnableDBGSleepMode_ExpectAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_DBGMCU_EnableDBGSleepMode requires _Expect (not AndReturn)");
#define HAL_DBGMCU_EnableDBGSleepMode_Expect() HAL_DBGMCU_EnableDBGSleepMode_CMockExpect(__LINE__)
void HAL_DBGMCU_EnableDBGSleepMode_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_HAL_DBGMCU_EnableDBGSleepMode_CALLBACK)(int cmock_num_calls);
void HAL_DBGMCU_EnableDBGSleepMode_AddCallback(CMOCK_HAL_DBGMCU_EnableDBGSleepMode_CALLBACK Callback);
void HAL_DBGMCU_EnableDBGSleepMode_Stub(CMOCK_HAL_DBGMCU_EnableDBGSleepMode_CALLBACK Callback);
#define HAL_DBGMCU_EnableDBGSleepMode_StubWithCallback HAL_DBGMCU_EnableDBGSleepMode_Stub
#define HAL_DBGMCU_DisableDBGSleepMode_IgnoreAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_DBGMCU_DisableDBGSleepMode requires _Ignore (not AndReturn)");
#define HAL_DBGMCU_DisableDBGSleepMode_Ignore() HAL_DBGMCU_DisableDBGSleepMode_CMockIgnore()
void HAL_DBGMCU_DisableDBGSleepMode_CMockIgnore(void);
#define HAL_DBGMCU_DisableDBGSleepMode_StopIgnore() HAL_DBGMCU_DisableDBGSleepMode_CMockStopIgnore()
void HAL_DBGMCU_DisableDBGSleepMode_CMockStopIgnore(void);
#define HAL_DBGMCU_DisableDBGSleepMode_ExpectAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_DBGMCU_DisableDBGSleepMode requires _Expect (not AndReturn)");
#define HAL_DBGMCU_DisableDBGSleepMode_Expect() HAL_DBGMCU_DisableDBGSleepMode_CMockExpect(__LINE__)
void HAL_DBGMCU_DisableDBGSleepMode_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_HAL_DBGMCU_DisableDBGSleepMode_CALLBACK)(int cmock_num_calls);
void HAL_DBGMCU_DisableDBGSleepMode_AddCallback(CMOCK_HAL_DBGMCU_DisableDBGSleepMode_CALLBACK Callback);
void HAL_DBGMCU_DisableDBGSleepMode_Stub(CMOCK_HAL_DBGMCU_DisableDBGSleepMode_CALLBACK Callback);
#define HAL_DBGMCU_DisableDBGSleepMode_StubWithCallback HAL_DBGMCU_DisableDBGSleepMode_Stub
#define HAL_DBGMCU_EnableDBGStopMode_IgnoreAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_DBGMCU_EnableDBGStopMode requires _Ignore (not AndReturn)");
#define HAL_DBGMCU_EnableDBGStopMode_Ignore() HAL_DBGMCU_EnableDBGStopMode_CMockIgnore()
void HAL_DBGMCU_EnableDBGStopMode_CMockIgnore(void);
#define HAL_DBGMCU_EnableDBGStopMode_StopIgnore() HAL_DBGMCU_EnableDBGStopMode_CMockStopIgnore()
void HAL_DBGMCU_EnableDBGStopMode_CMockStopIgnore(void);
#define HAL_DBGMCU_EnableDBGStopMode_ExpectAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_DBGMCU_EnableDBGStopMode requires _Expect (not AndReturn)");
#define HAL_DBGMCU_EnableDBGStopMode_Expect() HAL_DBGMCU_EnableDBGStopMode_CMockExpect(__LINE__)
void HAL_DBGMCU_EnableDBGStopMode_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_HAL_DBGMCU_EnableDBGStopMode_CALLBACK)(int cmock_num_calls);
void HAL_DBGMCU_EnableDBGStopMode_AddCallback(CMOCK_HAL_DBGMCU_EnableDBGStopMode_CALLBACK Callback);
void HAL_DBGMCU_EnableDBGStopMode_Stub(CMOCK_HAL_DBGMCU_EnableDBGStopMode_CALLBACK Callback);
#define HAL_DBGMCU_EnableDBGStopMode_StubWithCallback HAL_DBGMCU_EnableDBGStopMode_Stub
#define HAL_DBGMCU_DisableDBGStopMode_IgnoreAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_DBGMCU_DisableDBGStopMode requires _Ignore (not AndReturn)");
#define HAL_DBGMCU_DisableDBGStopMode_Ignore() HAL_DBGMCU_DisableDBGStopMode_CMockIgnore()
void HAL_DBGMCU_DisableDBGStopMode_CMockIgnore(void);
#define HAL_DBGMCU_DisableDBGStopMode_StopIgnore() HAL_DBGMCU_DisableDBGStopMode_CMockStopIgnore()
void HAL_DBGMCU_DisableDBGStopMode_CMockStopIgnore(void);
#define HAL_DBGMCU_DisableDBGStopMode_ExpectAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_DBGMCU_DisableDBGStopMode requires _Expect (not AndReturn)");
#define HAL_DBGMCU_DisableDBGStopMode_Expect() HAL_DBGMCU_DisableDBGStopMode_CMockExpect(__LINE__)
void HAL_DBGMCU_DisableDBGStopMode_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_HAL_DBGMCU_DisableDBGStopMode_CALLBACK)(int cmock_num_calls);
void HAL_DBGMCU_DisableDBGStopMode_AddCallback(CMOCK_HAL_DBGMCU_DisableDBGStopMode_CALLBACK Callback);
void HAL_DBGMCU_DisableDBGStopMode_Stub(CMOCK_HAL_DBGMCU_DisableDBGStopMode_CALLBACK Callback);
#define HAL_DBGMCU_DisableDBGStopMode_StubWithCallback HAL_DBGMCU_DisableDBGStopMode_Stub
#define HAL_DBGMCU_EnableDBGStandbyMode_IgnoreAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_DBGMCU_EnableDBGStandbyMode requires _Ignore (not AndReturn)");
#define HAL_DBGMCU_EnableDBGStandbyMode_Ignore() HAL_DBGMCU_EnableDBGStandbyMode_CMockIgnore()
void HAL_DBGMCU_EnableDBGStandbyMode_CMockIgnore(void);
#define HAL_DBGMCU_EnableDBGStandbyMode_StopIgnore() HAL_DBGMCU_EnableDBGStandbyMode_CMockStopIgnore()
void HAL_DBGMCU_EnableDBGStandbyMode_CMockStopIgnore(void);
#define HAL_DBGMCU_EnableDBGStandbyMode_ExpectAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_DBGMCU_EnableDBGStandbyMode requires _Expect (not AndReturn)");
#define HAL_DBGMCU_EnableDBGStandbyMode_Expect() HAL_DBGMCU_EnableDBGStandbyMode_CMockExpect(__LINE__)
void HAL_DBGMCU_EnableDBGStandbyMode_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_HAL_DBGMCU_EnableDBGStandbyMode_CALLBACK)(int cmock_num_calls);
void HAL_DBGMCU_EnableDBGStandbyMode_AddCallback(CMOCK_HAL_DBGMCU_EnableDBGStandbyMode_CALLBACK Callback);
void HAL_DBGMCU_EnableDBGStandbyMode_Stub(CMOCK_HAL_DBGMCU_EnableDBGStandbyMode_CALLBACK Callback);
#define HAL_DBGMCU_EnableDBGStandbyMode_StubWithCallback HAL_DBGMCU_EnableDBGStandbyMode_Stub
#define HAL_DBGMCU_DisableDBGStandbyMode_IgnoreAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_DBGMCU_DisableDBGStandbyMode requires _Ignore (not AndReturn)");
#define HAL_DBGMCU_DisableDBGStandbyMode_Ignore() HAL_DBGMCU_DisableDBGStandbyMode_CMockIgnore()
void HAL_DBGMCU_DisableDBGStandbyMode_CMockIgnore(void);
#define HAL_DBGMCU_DisableDBGStandbyMode_StopIgnore() HAL_DBGMCU_DisableDBGStandbyMode_CMockStopIgnore()
void HAL_DBGMCU_DisableDBGStandbyMode_CMockStopIgnore(void);
#define HAL_DBGMCU_DisableDBGStandbyMode_ExpectAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_DBGMCU_DisableDBGStandbyMode requires _Expect (not AndReturn)");
#define HAL_DBGMCU_DisableDBGStandbyMode_Expect() HAL_DBGMCU_DisableDBGStandbyMode_CMockExpect(__LINE__)
void HAL_DBGMCU_DisableDBGStandbyMode_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_HAL_DBGMCU_DisableDBGStandbyMode_CALLBACK)(int cmock_num_calls);
void HAL_DBGMCU_DisableDBGStandbyMode_AddCallback(CMOCK_HAL_DBGMCU_DisableDBGStandbyMode_CALLBACK Callback);
void HAL_DBGMCU_DisableDBGStandbyMode_Stub(CMOCK_HAL_DBGMCU_DisableDBGStandbyMode_CALLBACK Callback);
#define HAL_DBGMCU_DisableDBGStandbyMode_StubWithCallback HAL_DBGMCU_DisableDBGStandbyMode_Stub
#define HAL_SYSCFG_CCMSRAMErase_IgnoreAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_SYSCFG_CCMSRAMErase requires _Ignore (not AndReturn)");
#define HAL_SYSCFG_CCMSRAMErase_Ignore() HAL_SYSCFG_CCMSRAMErase_CMockIgnore()
void HAL_SYSCFG_CCMSRAMErase_CMockIgnore(void);
#define HAL_SYSCFG_CCMSRAMErase_StopIgnore() HAL_SYSCFG_CCMSRAMErase_CMockStopIgnore()
void HAL_SYSCFG_CCMSRAMErase_CMockStopIgnore(void);
#define HAL_SYSCFG_CCMSRAMErase_ExpectAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_SYSCFG_CCMSRAMErase requires _Expect (not AndReturn)");
#define HAL_SYSCFG_CCMSRAMErase_Expect() HAL_SYSCFG_CCMSRAMErase_CMockExpect(__LINE__)
void HAL_SYSCFG_CCMSRAMErase_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_HAL_SYSCFG_CCMSRAMErase_CALLBACK)(int cmock_num_calls);
void HAL_SYSCFG_CCMSRAMErase_AddCallback(CMOCK_HAL_SYSCFG_CCMSRAMErase_CALLBACK Callback);
void HAL_SYSCFG_CCMSRAMErase_Stub(CMOCK_HAL_SYSCFG_CCMSRAMErase_CALLBACK Callback);
#define HAL_SYSCFG_CCMSRAMErase_StubWithCallback HAL_SYSCFG_CCMSRAMErase_Stub
#define HAL_SYSCFG_EnableMemorySwappingBank_IgnoreAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_SYSCFG_EnableMemorySwappingBank requires _Ignore (not AndReturn)");
#define HAL_SYSCFG_EnableMemorySwappingBank_Ignore() HAL_SYSCFG_EnableMemorySwappingBank_CMockIgnore()
void HAL_SYSCFG_EnableMemorySwappingBank_CMockIgnore(void);
#define HAL_SYSCFG_EnableMemorySwappingBank_StopIgnore() HAL_SYSCFG_EnableMemorySwappingBank_CMockStopIgnore()
void HAL_SYSCFG_EnableMemorySwappingBank_CMockStopIgnore(void);
#define HAL_SYSCFG_EnableMemorySwappingBank_ExpectAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_SYSCFG_EnableMemorySwappingBank requires _Expect (not AndReturn)");
#define HAL_SYSCFG_EnableMemorySwappingBank_Expect() HAL_SYSCFG_EnableMemorySwappingBank_CMockExpect(__LINE__)
void HAL_SYSCFG_EnableMemorySwappingBank_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_HAL_SYSCFG_EnableMemorySwappingBank_CALLBACK)(int cmock_num_calls);
void HAL_SYSCFG_EnableMemorySwappingBank_AddCallback(CMOCK_HAL_SYSCFG_EnableMemorySwappingBank_CALLBACK Callback);
void HAL_SYSCFG_EnableMemorySwappingBank_Stub(CMOCK_HAL_SYSCFG_EnableMemorySwappingBank_CALLBACK Callback);
#define HAL_SYSCFG_EnableMemorySwappingBank_StubWithCallback HAL_SYSCFG_EnableMemorySwappingBank_Stub
#define HAL_SYSCFG_DisableMemorySwappingBank_IgnoreAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_SYSCFG_DisableMemorySwappingBank requires _Ignore (not AndReturn)");
#define HAL_SYSCFG_DisableMemorySwappingBank_Ignore() HAL_SYSCFG_DisableMemorySwappingBank_CMockIgnore()
void HAL_SYSCFG_DisableMemorySwappingBank_CMockIgnore(void);
#define HAL_SYSCFG_DisableMemorySwappingBank_StopIgnore() HAL_SYSCFG_DisableMemorySwappingBank_CMockStopIgnore()
void HAL_SYSCFG_DisableMemorySwappingBank_CMockStopIgnore(void);
#define HAL_SYSCFG_DisableMemorySwappingBank_ExpectAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_SYSCFG_DisableMemorySwappingBank requires _Expect (not AndReturn)");
#define HAL_SYSCFG_DisableMemorySwappingBank_Expect() HAL_SYSCFG_DisableMemorySwappingBank_CMockExpect(__LINE__)
void HAL_SYSCFG_DisableMemorySwappingBank_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_HAL_SYSCFG_DisableMemorySwappingBank_CALLBACK)(int cmock_num_calls);
void HAL_SYSCFG_DisableMemorySwappingBank_AddCallback(CMOCK_HAL_SYSCFG_DisableMemorySwappingBank_CALLBACK Callback);
void HAL_SYSCFG_DisableMemorySwappingBank_Stub(CMOCK_HAL_SYSCFG_DisableMemorySwappingBank_CALLBACK Callback);
#define HAL_SYSCFG_DisableMemorySwappingBank_StubWithCallback HAL_SYSCFG_DisableMemorySwappingBank_Stub
#define HAL_SYSCFG_VREFBUF_VoltageScalingConfig_IgnoreAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_SYSCFG_VREFBUF_VoltageScalingConfig requires _Ignore (not AndReturn)");
#define HAL_SYSCFG_VREFBUF_VoltageScalingConfig_Ignore() HAL_SYSCFG_VREFBUF_VoltageScalingConfig_CMockIgnore()
void HAL_SYSCFG_VREFBUF_VoltageScalingConfig_CMockIgnore(void);
#define HAL_SYSCFG_VREFBUF_VoltageScalingConfig_StopIgnore() HAL_SYSCFG_VREFBUF_VoltageScalingConfig_CMockStopIgnore()
void HAL_SYSCFG_VREFBUF_VoltageScalingConfig_CMockStopIgnore(void);
#define HAL_SYSCFG_VREFBUF_VoltageScalingConfig_ExpectAndReturn(VoltageScaling, cmock_retval) TEST_FAIL_MESSAGE("HAL_SYSCFG_VREFBUF_VoltageScalingConfig requires _Expect (not AndReturn)");
#define HAL_SYSCFG_VREFBUF_VoltageScalingConfig_Expect(VoltageScaling) HAL_SYSCFG_VREFBUF_VoltageScalingConfig_CMockExpect(__LINE__, VoltageScaling)
void HAL_SYSCFG_VREFBUF_VoltageScalingConfig_CMockExpect(UNITY_LINE_TYPE cmock_line, uint32_t VoltageScaling);
typedef void (* CMOCK_HAL_SYSCFG_VREFBUF_VoltageScalingConfig_CALLBACK)(uint32_t VoltageScaling, int cmock_num_calls);
void HAL_SYSCFG_VREFBUF_VoltageScalingConfig_AddCallback(CMOCK_HAL_SYSCFG_VREFBUF_VoltageScalingConfig_CALLBACK Callback);
void HAL_SYSCFG_VREFBUF_VoltageScalingConfig_Stub(CMOCK_HAL_SYSCFG_VREFBUF_VoltageScalingConfig_CALLBACK Callback);
#define HAL_SYSCFG_VREFBUF_VoltageScalingConfig_StubWithCallback HAL_SYSCFG_VREFBUF_VoltageScalingConfig_Stub
#define HAL_SYSCFG_VREFBUF_HighImpedanceConfig_IgnoreAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_SYSCFG_VREFBUF_HighImpedanceConfig requires _Ignore (not AndReturn)");
#define HAL_SYSCFG_VREFBUF_HighImpedanceConfig_Ignore() HAL_SYSCFG_VREFBUF_HighImpedanceConfig_CMockIgnore()
void HAL_SYSCFG_VREFBUF_HighImpedanceConfig_CMockIgnore(void);
#define HAL_SYSCFG_VREFBUF_HighImpedanceConfig_StopIgnore() HAL_SYSCFG_VREFBUF_HighImpedanceConfig_CMockStopIgnore()
void HAL_SYSCFG_VREFBUF_HighImpedanceConfig_CMockStopIgnore(void);
#define HAL_SYSCFG_VREFBUF_HighImpedanceConfig_ExpectAndReturn(Mode, cmock_retval) TEST_FAIL_MESSAGE("HAL_SYSCFG_VREFBUF_HighImpedanceConfig requires _Expect (not AndReturn)");
#define HAL_SYSCFG_VREFBUF_HighImpedanceConfig_Expect(Mode) HAL_SYSCFG_VREFBUF_HighImpedanceConfig_CMockExpect(__LINE__, Mode)
void HAL_SYSCFG_VREFBUF_HighImpedanceConfig_CMockExpect(UNITY_LINE_TYPE cmock_line, uint32_t Mode);
typedef void (* CMOCK_HAL_SYSCFG_VREFBUF_HighImpedanceConfig_CALLBACK)(uint32_t Mode, int cmock_num_calls);
void HAL_SYSCFG_VREFBUF_HighImpedanceConfig_AddCallback(CMOCK_HAL_SYSCFG_VREFBUF_HighImpedanceConfig_CALLBACK Callback);
void HAL_SYSCFG_VREFBUF_HighImpedanceConfig_Stub(CMOCK_HAL_SYSCFG_VREFBUF_HighImpedanceConfig_CALLBACK Callback);
#define HAL_SYSCFG_VREFBUF_HighImpedanceConfig_StubWithCallback HAL_SYSCFG_VREFBUF_HighImpedanceConfig_Stub
#define HAL_SYSCFG_VREFBUF_TrimmingConfig_IgnoreAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_SYSCFG_VREFBUF_TrimmingConfig requires _Ignore (not AndReturn)");
#define HAL_SYSCFG_VREFBUF_TrimmingConfig_Ignore() HAL_SYSCFG_VREFBUF_TrimmingConfig_CMockIgnore()
void HAL_SYSCFG_VREFBUF_TrimmingConfig_CMockIgnore(void);
#define HAL_SYSCFG_VREFBUF_TrimmingConfig_StopIgnore() HAL_SYSCFG_VREFBUF_TrimmingConfig_CMockStopIgnore()
void HAL_SYSCFG_VREFBUF_TrimmingConfig_CMockStopIgnore(void);
#define HAL_SYSCFG_VREFBUF_TrimmingConfig_ExpectAndReturn(TrimmingValue, cmock_retval) TEST_FAIL_MESSAGE("HAL_SYSCFG_VREFBUF_TrimmingConfig requires _Expect (not AndReturn)");
#define HAL_SYSCFG_VREFBUF_TrimmingConfig_Expect(TrimmingValue) HAL_SYSCFG_VREFBUF_TrimmingConfig_CMockExpect(__LINE__, TrimmingValue)
void HAL_SYSCFG_VREFBUF_TrimmingConfig_CMockExpect(UNITY_LINE_TYPE cmock_line, uint32_t TrimmingValue);
typedef void (* CMOCK_HAL_SYSCFG_VREFBUF_TrimmingConfig_CALLBACK)(uint32_t TrimmingValue, int cmock_num_calls);
void HAL_SYSCFG_VREFBUF_TrimmingConfig_AddCallback(CMOCK_HAL_SYSCFG_VREFBUF_TrimmingConfig_CALLBACK Callback);
void HAL_SYSCFG_VREFBUF_TrimmingConfig_Stub(CMOCK_HAL_SYSCFG_VREFBUF_TrimmingConfig_CALLBACK Callback);
#define HAL_SYSCFG_VREFBUF_TrimmingConfig_StubWithCallback HAL_SYSCFG_VREFBUF_TrimmingConfig_Stub
#define HAL_SYSCFG_EnableVREFBUF_Ignore() TEST_FAIL_MESSAGE("HAL_SYSCFG_EnableVREFBUF requires _IgnoreAndReturn");
#define HAL_SYSCFG_EnableVREFBUF_IgnoreAndReturn(cmock_retval) HAL_SYSCFG_EnableVREFBUF_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void HAL_SYSCFG_EnableVREFBUF_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, HAL_StatusTypeDef cmock_to_return);
#define HAL_SYSCFG_EnableVREFBUF_StopIgnore() HAL_SYSCFG_EnableVREFBUF_CMockStopIgnore()
void HAL_SYSCFG_EnableVREFBUF_CMockStopIgnore(void);
#define HAL_SYSCFG_EnableVREFBUF_Expect() TEST_FAIL_MESSAGE("HAL_SYSCFG_EnableVREFBUF requires _ExpectAndReturn");
#define HAL_SYSCFG_EnableVREFBUF_ExpectAndReturn(cmock_retval) HAL_SYSCFG_EnableVREFBUF_CMockExpectAndReturn(__LINE__, cmock_retval)
void HAL_SYSCFG_EnableVREFBUF_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, HAL_StatusTypeDef cmock_to_return);
typedef HAL_StatusTypeDef (* CMOCK_HAL_SYSCFG_EnableVREFBUF_CALLBACK)(int cmock_num_calls);
void HAL_SYSCFG_EnableVREFBUF_AddCallback(CMOCK_HAL_SYSCFG_EnableVREFBUF_CALLBACK Callback);
void HAL_SYSCFG_EnableVREFBUF_Stub(CMOCK_HAL_SYSCFG_EnableVREFBUF_CALLBACK Callback);
#define HAL_SYSCFG_EnableVREFBUF_StubWithCallback HAL_SYSCFG_EnableVREFBUF_Stub
#define HAL_SYSCFG_DisableVREFBUF_IgnoreAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_SYSCFG_DisableVREFBUF requires _Ignore (not AndReturn)");
#define HAL_SYSCFG_DisableVREFBUF_Ignore() HAL_SYSCFG_DisableVREFBUF_CMockIgnore()
void HAL_SYSCFG_DisableVREFBUF_CMockIgnore(void);
#define HAL_SYSCFG_DisableVREFBUF_StopIgnore() HAL_SYSCFG_DisableVREFBUF_CMockStopIgnore()
void HAL_SYSCFG_DisableVREFBUF_CMockStopIgnore(void);
#define HAL_SYSCFG_DisableVREFBUF_ExpectAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_SYSCFG_DisableVREFBUF requires _Expect (not AndReturn)");
#define HAL_SYSCFG_DisableVREFBUF_Expect() HAL_SYSCFG_DisableVREFBUF_CMockExpect(__LINE__)
void HAL_SYSCFG_DisableVREFBUF_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_HAL_SYSCFG_DisableVREFBUF_CALLBACK)(int cmock_num_calls);
void HAL_SYSCFG_DisableVREFBUF_AddCallback(CMOCK_HAL_SYSCFG_DisableVREFBUF_CALLBACK Callback);
void HAL_SYSCFG_DisableVREFBUF_Stub(CMOCK_HAL_SYSCFG_DisableVREFBUF_CALLBACK Callback);
#define HAL_SYSCFG_DisableVREFBUF_StubWithCallback HAL_SYSCFG_DisableVREFBUF_Stub
#define HAL_SYSCFG_EnableIOSwitchBooster_IgnoreAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_SYSCFG_EnableIOSwitchBooster requires _Ignore (not AndReturn)");
#define HAL_SYSCFG_EnableIOSwitchBooster_Ignore() HAL_SYSCFG_EnableIOSwitchBooster_CMockIgnore()
void HAL_SYSCFG_EnableIOSwitchBooster_CMockIgnore(void);
#define HAL_SYSCFG_EnableIOSwitchBooster_StopIgnore() HAL_SYSCFG_EnableIOSwitchBooster_CMockStopIgnore()
void HAL_SYSCFG_EnableIOSwitchBooster_CMockStopIgnore(void);
#define HAL_SYSCFG_EnableIOSwitchBooster_ExpectAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_SYSCFG_EnableIOSwitchBooster requires _Expect (not AndReturn)");
#define HAL_SYSCFG_EnableIOSwitchBooster_Expect() HAL_SYSCFG_EnableIOSwitchBooster_CMockExpect(__LINE__)
void HAL_SYSCFG_EnableIOSwitchBooster_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_HAL_SYSCFG_EnableIOSwitchBooster_CALLBACK)(int cmock_num_calls);
void HAL_SYSCFG_EnableIOSwitchBooster_AddCallback(CMOCK_HAL_SYSCFG_EnableIOSwitchBooster_CALLBACK Callback);
void HAL_SYSCFG_EnableIOSwitchBooster_Stub(CMOCK_HAL_SYSCFG_EnableIOSwitchBooster_CALLBACK Callback);
#define HAL_SYSCFG_EnableIOSwitchBooster_StubWithCallback HAL_SYSCFG_EnableIOSwitchBooster_Stub
#define HAL_SYSCFG_DisableIOSwitchBooster_IgnoreAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_SYSCFG_DisableIOSwitchBooster requires _Ignore (not AndReturn)");
#define HAL_SYSCFG_DisableIOSwitchBooster_Ignore() HAL_SYSCFG_DisableIOSwitchBooster_CMockIgnore()
void HAL_SYSCFG_DisableIOSwitchBooster_CMockIgnore(void);
#define HAL_SYSCFG_DisableIOSwitchBooster_StopIgnore() HAL_SYSCFG_DisableIOSwitchBooster_CMockStopIgnore()
void HAL_SYSCFG_DisableIOSwitchBooster_CMockStopIgnore(void);
#define HAL_SYSCFG_DisableIOSwitchBooster_ExpectAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_SYSCFG_DisableIOSwitchBooster requires _Expect (not AndReturn)");
#define HAL_SYSCFG_DisableIOSwitchBooster_Expect() HAL_SYSCFG_DisableIOSwitchBooster_CMockExpect(__LINE__)
void HAL_SYSCFG_DisableIOSwitchBooster_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_HAL_SYSCFG_DisableIOSwitchBooster_CALLBACK)(int cmock_num_calls);
void HAL_SYSCFG_DisableIOSwitchBooster_AddCallback(CMOCK_HAL_SYSCFG_DisableIOSwitchBooster_CALLBACK Callback);
void HAL_SYSCFG_DisableIOSwitchBooster_Stub(CMOCK_HAL_SYSCFG_DisableIOSwitchBooster_CALLBACK Callback);
#define HAL_SYSCFG_DisableIOSwitchBooster_StubWithCallback HAL_SYSCFG_DisableIOSwitchBooster_Stub
#define HAL_SYSCFG_EnableIOSwitchVDD_IgnoreAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_SYSCFG_EnableIOSwitchVDD requires _Ignore (not AndReturn)");
#define HAL_SYSCFG_EnableIOSwitchVDD_Ignore() HAL_SYSCFG_EnableIOSwitchVDD_CMockIgnore()
void HAL_SYSCFG_EnableIOSwitchVDD_CMockIgnore(void);
#define HAL_SYSCFG_EnableIOSwitchVDD_StopIgnore() HAL_SYSCFG_EnableIOSwitchVDD_CMockStopIgnore()
void HAL_SYSCFG_EnableIOSwitchVDD_CMockStopIgnore(void);
#define HAL_SYSCFG_EnableIOSwitchVDD_ExpectAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_SYSCFG_EnableIOSwitchVDD requires _Expect (not AndReturn)");
#define HAL_SYSCFG_EnableIOSwitchVDD_Expect() HAL_SYSCFG_EnableIOSwitchVDD_CMockExpect(__LINE__)
void HAL_SYSCFG_EnableIOSwitchVDD_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_HAL_SYSCFG_EnableIOSwitchVDD_CALLBACK)(int cmock_num_calls);
void HAL_SYSCFG_EnableIOSwitchVDD_AddCallback(CMOCK_HAL_SYSCFG_EnableIOSwitchVDD_CALLBACK Callback);
void HAL_SYSCFG_EnableIOSwitchVDD_Stub(CMOCK_HAL_SYSCFG_EnableIOSwitchVDD_CALLBACK Callback);
#define HAL_SYSCFG_EnableIOSwitchVDD_StubWithCallback HAL_SYSCFG_EnableIOSwitchVDD_Stub
#define HAL_SYSCFG_DisableIOSwitchVDD_IgnoreAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_SYSCFG_DisableIOSwitchVDD requires _Ignore (not AndReturn)");
#define HAL_SYSCFG_DisableIOSwitchVDD_Ignore() HAL_SYSCFG_DisableIOSwitchVDD_CMockIgnore()
void HAL_SYSCFG_DisableIOSwitchVDD_CMockIgnore(void);
#define HAL_SYSCFG_DisableIOSwitchVDD_StopIgnore() HAL_SYSCFG_DisableIOSwitchVDD_CMockStopIgnore()
void HAL_SYSCFG_DisableIOSwitchVDD_CMockStopIgnore(void);
#define HAL_SYSCFG_DisableIOSwitchVDD_ExpectAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_SYSCFG_DisableIOSwitchVDD requires _Expect (not AndReturn)");
#define HAL_SYSCFG_DisableIOSwitchVDD_Expect() HAL_SYSCFG_DisableIOSwitchVDD_CMockExpect(__LINE__)
void HAL_SYSCFG_DisableIOSwitchVDD_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_HAL_SYSCFG_DisableIOSwitchVDD_CALLBACK)(int cmock_num_calls);
void HAL_SYSCFG_DisableIOSwitchVDD_AddCallback(CMOCK_HAL_SYSCFG_DisableIOSwitchVDD_CALLBACK Callback);
void HAL_SYSCFG_DisableIOSwitchVDD_Stub(CMOCK_HAL_SYSCFG_DisableIOSwitchVDD_CALLBACK Callback);
#define HAL_SYSCFG_DisableIOSwitchVDD_StubWithCallback HAL_SYSCFG_DisableIOSwitchVDD_Stub
#define HAL_SYSCFG_CCMSRAM_WriteProtectionEnable_IgnoreAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_SYSCFG_CCMSRAM_WriteProtectionEnable requires _Ignore (not AndReturn)");
#define HAL_SYSCFG_CCMSRAM_WriteProtectionEnable_Ignore() HAL_SYSCFG_CCMSRAM_WriteProtectionEnable_CMockIgnore()
void HAL_SYSCFG_CCMSRAM_WriteProtectionEnable_CMockIgnore(void);
#define HAL_SYSCFG_CCMSRAM_WriteProtectionEnable_StopIgnore() HAL_SYSCFG_CCMSRAM_WriteProtectionEnable_CMockStopIgnore()
void HAL_SYSCFG_CCMSRAM_WriteProtectionEnable_CMockStopIgnore(void);
#define HAL_SYSCFG_CCMSRAM_WriteProtectionEnable_ExpectAndReturn(Page, cmock_retval) TEST_FAIL_MESSAGE("HAL_SYSCFG_CCMSRAM_WriteProtectionEnable requires _Expect (not AndReturn)");
#define HAL_SYSCFG_CCMSRAM_WriteProtectionEnable_Expect(Page) HAL_SYSCFG_CCMSRAM_WriteProtectionEnable_CMockExpect(__LINE__, Page)
void HAL_SYSCFG_CCMSRAM_WriteProtectionEnable_CMockExpect(UNITY_LINE_TYPE cmock_line, uint32_t Page);
typedef void (* CMOCK_HAL_SYSCFG_CCMSRAM_WriteProtectionEnable_CALLBACK)(uint32_t Page, int cmock_num_calls);
void HAL_SYSCFG_CCMSRAM_WriteProtectionEnable_AddCallback(CMOCK_HAL_SYSCFG_CCMSRAM_WriteProtectionEnable_CALLBACK Callback);
void HAL_SYSCFG_CCMSRAM_WriteProtectionEnable_Stub(CMOCK_HAL_SYSCFG_CCMSRAM_WriteProtectionEnable_CALLBACK Callback);
#define HAL_SYSCFG_CCMSRAM_WriteProtectionEnable_StubWithCallback HAL_SYSCFG_CCMSRAM_WriteProtectionEnable_Stub

#ifdef __cplusplus
}
#endif

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
